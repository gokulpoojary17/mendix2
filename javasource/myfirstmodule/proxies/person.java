// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package myfirstmodule.proxies;

public class person
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject personMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "MyFirstModule.person";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		name("name"),
		age("age"),
		gender("gender"),
		birthdate("birthdate"),
		person_club("MyFirstModule.person_club"),
		person_profileimage("MyFirstModule.person_profileimage");

		private final java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public person(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, entityName));
	}

	protected person(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject personMendixObject)
	{
		if (personMendixObject == null) {
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		}
		if (!com.mendix.core.Core.isSubClassOf(entityName, personMendixObject.getType())) {
			throw new java.lang.IllegalArgumentException(String.format("The given object is not a %s", entityName));
		}	

		this.personMendixObject = personMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'person.load(IContext, IMendixIdentifier)' instead.
	 */
	@java.lang.Deprecated
	public static myfirstmodule.proxies.person initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return myfirstmodule.proxies.person.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 * @param context The context to be used
	 * @param mendixObject The Mendix object for the new instance
	 * @return a new instance of this proxy class
	 */
	public static myfirstmodule.proxies.person initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new myfirstmodule.proxies.person(context, mendixObject);
	}

	public static myfirstmodule.proxies.person load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return myfirstmodule.proxies.person.initialize(context, mendixObject);
	}

	public static java.util.List<myfirstmodule.proxies.person> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		return com.mendix.core.Core.createXPathQuery(String.format("//%1$s%2$s", entityName, xpathConstraint))
			.execute(context)
			.stream()
			.map(obj -> myfirstmodule.proxies.person.initialize(context, obj))
			.collect(java.util.stream.Collectors.toList());
	}

	/**
	 * Commit the changes made on this proxy object.
	 * @throws com.mendix.core.CoreException
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 * @throws com.mendix.core.CoreException
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of name
	 */
	public final java.lang.String getname()
	{
		return getname(getContext());
	}

	/**
	 * @param context
	 * @return value of name
	 */
	public final java.lang.String getname(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.name.toString());
	}

	/**
	 * Set value of name
	 * @param name
	 */
	public final void setname(java.lang.String name)
	{
		setname(getContext(), name);
	}

	/**
	 * Set value of name
	 * @param context
	 * @param name
	 */
	public final void setname(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String name)
	{
		getMendixObject().setValue(context, MemberNames.name.toString(), name);
	}

	/**
	 * @return value of age
	 */
	public final java.lang.Integer getage()
	{
		return getage(getContext());
	}

	/**
	 * @param context
	 * @return value of age
	 */
	public final java.lang.Integer getage(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Integer) getMendixObject().getValue(context, MemberNames.age.toString());
	}

	/**
	 * Set value of age
	 * @param age
	 */
	public final void setage(java.lang.Integer age)
	{
		setage(getContext(), age);
	}

	/**
	 * Set value of age
	 * @param context
	 * @param age
	 */
	public final void setage(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Integer age)
	{
		getMendixObject().setValue(context, MemberNames.age.toString(), age);
	}

	/**
	 * Set value of gender
	 * @param gender
	 */
	public final myfirstmodule.proxies.enum_gender getgender()
	{
		return getgender(getContext());
	}

	/**
	 * @param context
	 * @return value of gender
	 */
	public final myfirstmodule.proxies.enum_gender getgender(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.gender.toString());
		if (obj == null) {
			return null;
		}
		return myfirstmodule.proxies.enum_gender.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of gender
	 * @param gender
	 */
	public final void setgender(myfirstmodule.proxies.enum_gender gender)
	{
		setgender(getContext(), gender);
	}

	/**
	 * Set value of gender
	 * @param context
	 * @param gender
	 */
	public final void setgender(com.mendix.systemwideinterfaces.core.IContext context, myfirstmodule.proxies.enum_gender gender)
	{
		if (gender != null) {
			getMendixObject().setValue(context, MemberNames.gender.toString(), gender.toString());
		} else {
			getMendixObject().setValue(context, MemberNames.gender.toString(), null);
		}
	}

	/**
	 * @return value of birthdate
	 */
	public final java.util.Date getbirthdate()
	{
		return getbirthdate(getContext());
	}

	/**
	 * @param context
	 * @return value of birthdate
	 */
	public final java.util.Date getbirthdate(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.util.Date) getMendixObject().getValue(context, MemberNames.birthdate.toString());
	}

	/**
	 * Set value of birthdate
	 * @param birthdate
	 */
	public final void setbirthdate(java.util.Date birthdate)
	{
		setbirthdate(getContext(), birthdate);
	}

	/**
	 * Set value of birthdate
	 * @param context
	 * @param birthdate
	 */
	public final void setbirthdate(com.mendix.systemwideinterfaces.core.IContext context, java.util.Date birthdate)
	{
		getMendixObject().setValue(context, MemberNames.birthdate.toString(), birthdate);
	}

	/**
	 * @throws com.mendix.core.CoreException
	 * @return value of person_club
	 */
	public final myfirstmodule.proxies.club getperson_club() throws com.mendix.core.CoreException
	{
		return getperson_club(getContext());
	}

	/**
	 * @param context
	 * @return value of person_club
	 * @throws com.mendix.core.CoreException
	 */
	public final myfirstmodule.proxies.club getperson_club(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		myfirstmodule.proxies.club result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.person_club.toString());
		if (identifier != null) {
			result = myfirstmodule.proxies.club.load(context, identifier);
		}
		return result;
	}

	/**
	 * Set value of person_club
	 * @param person_club
	 */
	public final void setperson_club(myfirstmodule.proxies.club person_club)
	{
		setperson_club(getContext(), person_club);
	}

	/**
	 * Set value of person_club
	 * @param context
	 * @param person_club
	 */
	public final void setperson_club(com.mendix.systemwideinterfaces.core.IContext context, myfirstmodule.proxies.club person_club)
	{
		if (person_club == null) {
			getMendixObject().setValue(context, MemberNames.person_club.toString(), null);
		} else {
			getMendixObject().setValue(context, MemberNames.person_club.toString(), person_club.getMendixObject().getId());
		}
	}

	/**
	 * @throws com.mendix.core.CoreException
	 * @return value of person_profileimage
	 */
	public final myfirstmodule.proxies.profileimage getperson_profileimage() throws com.mendix.core.CoreException
	{
		return getperson_profileimage(getContext());
	}

	/**
	 * @param context
	 * @return value of person_profileimage
	 * @throws com.mendix.core.CoreException
	 */
	public final myfirstmodule.proxies.profileimage getperson_profileimage(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		myfirstmodule.proxies.profileimage result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.person_profileimage.toString());
		if (identifier != null) {
			result = myfirstmodule.proxies.profileimage.load(context, identifier);
		}
		return result;
	}

	/**
	 * Set value of person_profileimage
	 * @param person_profileimage
	 */
	public final void setperson_profileimage(myfirstmodule.proxies.profileimage person_profileimage)
	{
		setperson_profileimage(getContext(), person_profileimage);
	}

	/**
	 * Set value of person_profileimage
	 * @param context
	 * @param person_profileimage
	 */
	public final void setperson_profileimage(com.mendix.systemwideinterfaces.core.IContext context, myfirstmodule.proxies.profileimage person_profileimage)
	{
		if (person_profileimage == null) {
			getMendixObject().setValue(context, MemberNames.person_profileimage.toString(), null);
		} else {
			getMendixObject().setValue(context, MemberNames.person_profileimage.toString(), person_profileimage.getMendixObject().getId());
		}
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return personMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this) {
			return true;
		}
		if (obj != null && getClass().equals(obj.getClass()))
		{
			final myfirstmodule.proxies.person that = (myfirstmodule.proxies.person) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return entityName;
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@java.lang.Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
